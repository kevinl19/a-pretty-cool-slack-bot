export enum StripeEventType {
  AccountUpdated = 'account.updated',
  AccountApplicationAuthorized = 'account.application.authorized',
  AccountApplicationDeauthorized = 'account.application.deauthorized',
  AccountExternalAccountCreated = 'account.external_account.created',
  AccountExternalAccountDeleted = 'account.external_account.deleted',
  AccountExternalAccountUpdated = 'account.external_account.updated',
  ApplicationFeeCreated = 'application_fee.created',
  ApplicationFeeRefunded = 'application_fee.refunded',
  ApplicationFeeRefundUpdated = 'application_fee.refund.updated',
  BalanceAvailable = 'balance.available',
  CapabilityUpdated = 'capability.updated',
  ChargeCaptured = 'charge.captured',
  ChargeExpired = 'charge.expired',
  ChargeFailed = 'charge.failed',
  ChargePending = 'charge.pending',
  ChargeRefunded = 'charge.refunded',
  ChargeSucceeded = 'charge.succeeded',
  ChargeUpdated = 'charge.updated',
  ChargeDisputeClosed = 'charge.dispute.closed',
  ChargeDisputeCreated = 'charge.dispute.created',
  ChargeDisputeFundsReinstated = 'charge.dispute.funds_reinstated',
  ChargeDisputeFundsWithdrawn = 'charge.dispute.funds_withdrawn',
  ChargeDisputeUpdated = 'charge.dispute.updated',
  ChargeRefundUpdated = 'charge.refund.updated',
  CheckoutSessionAsyncPaymentFailed = 'checkout.session.async_payment_failed',
  CheckoutSessionAsyncPaymentSucceeded = 'checkout.session.async_payment_succeeded',
  CheckoutSessionCompleted = 'checkout.session.completed',
  CouponCreated = 'coupon.created',
  CouponDeleted = 'coupon.deleted',
  CouponUpdated = 'coupon.updated',
  CreditNoteCreated = 'credit_note.created',
  CreditNoteUpdated = 'credit_note.updated',
  CreditNoteVoided = 'credit_note.voided',
  CustomerCreated = 'customer.created',
  CustomerDeleted = 'customer.deleted',
  CustomerUpdated = 'customer.updated',
  CustomerDiscountCreated = 'customer.discount.created',
  CustomerDiscountDeleted = 'customer.discount.deleted',
  CustomerDiscountUpdated = 'customer.discount.updated',
  CustomerSourceCreated = 'customer.source.created',
  CustomerSourceDeleted = 'customer.source.deleted',
  CustomerSourceExpiring = 'customer.source.expiring',
  CustomerSourceUpdated = 'customer.source.updated',
  CustomerSubscriptionCreated = 'customer.subscription.created',
  CustomerSubscriptionDeleted = 'customer.subscription.deleted',
  CustomerSubscriptionPendingUpdateApplied = 'customer.subscription.pending_update_applied',
  CustomerSubscriptionPendingUpdateExpired = 'customer.subscription.pending_update_expired',
  CustomerSubscriptionTrialWillEnd = 'customer.subscription.trial_will_end',
  CustomerSubscriptionUpdated = 'customer.subscription.updated',
  CustomerTaxIdCreated = 'customer.tax_id.created',
  CustomerTaxIdDeleted = 'customer.tax_id.deleted',
  CustomerTaxIdUpdated = 'customer.tax_id.updated',
  FileCreated = 'file.created',
  InvoiceCreated = 'invoice.created',
  InvoiceDeleted = 'invoice.deleted',
  InvoiceFinalized = 'invoice.finalized',
  InvoiceMarkedUncollectible = 'invoice.marked_uncollectible',
  InvoicePaid = 'invoice.paid',
  InvoicePaymentActionRequired = 'invoice.payment_action_required',
  InvoicePaymentFailed = 'invoice.payment_failed',
  InvoicePaymentSucceeded = 'invoice.payment_succeeded',
  InvoiceSent = 'invoice.sent',
  InvoiceUpcoming = 'invoice.upcoming',
  InvoiceUpdated = 'invoice.updated',
  InvoiceVoided = 'invoice.voided',
  InvoiceItemCreated = 'invoiceitem.created',
  InvoiceItemDeleted = 'invoiceitem.deleted',
  InvoiceItemUpdated = 'invoiceitem.updated',
  IssuingAuthorization__Created = 'issuing_authorization.created',
  IssuingAuthorization__request = 'issuing_authorization.request',
  IssuingAuthorization__Updated = 'issuing_authorization.updated',
  IssuingCardCreated = 'issuing_card.created',
  IssuingCardUpdated = 'issuing_card.updated',
  IssuingCardholderCreated = 'issuing_cardholder.created',
  IssuingCardholderUpdated = 'issuing_cardholder.updated',
  IssuingDisputeCreated = 'issuing_dispute.created',
  IssuingDisputeFunds_reinstated = 'issuing_dispute.funds_reinstated',
  IssuingDisputeUpdated = 'issuing_dispute.updated',
  IssuingTransactionCreated = 'issuing_transaction.created',
  IssuingTransactionUpdated = 'issuing_transaction.updated',
  MandateUpdated = 'mandate.updated',
  OrderCreated = 'order.created',
  OrderPayment_failed = 'order.payment_failed',
  OrderPayment_succeeded = 'order.payment_succeeded',
  OrderUpdated = 'order.updated',
  OrderReturnCreated = 'order_return.created',
  PaymentIntentAmountCapturableUpdated = 'payment_intent.amount_capturable_updated',
  PaymentIntentCanceled = 'payment_intent.canceled',
  PaymentIntentCreated = 'payment_intent.created',
  PaymentIntentPaymentFailed = 'payment_intent.payment_failed',
  PaymentIntentProcessing = 'payment_intent.processing',
  PaymentIntentRequiresAction = 'payment_intent.requires_action',
  PaymentIntentSucceeded = 'payment_intent.succeeded',
  PaymentMethodAttached = 'payment_method.attached',
  PaymentMethodCardAutomaticallyUpdated = 'payment_method.card_automatically_updated',
  PaymentMethodDetached = 'payment_method.detached',
  PaymentMethodUpdated = 'payment_method.updated',
  PayoutCanceled = 'payout.canceled',
  PayoutCreated = 'payout.created',
  PayoutFailed = 'payout.failed',
  PayoutPaid = 'payout.paid',
  PayoutUpdated = 'payout.updated',
  PersonCreated = 'person.created',
  PersonDeleted = 'person.deleted',
  PersonUpdated = 'person.updated',
  PlanCreated = 'plan.created',
  PlanDeleted = 'plan.deleted',
  PlanUpdated = 'plan.updated',
  PriceCreated = 'price.created',
  PriceDeleted = 'price.deleted',
  PriceUpdated = 'price.updated',
  ProductCreated = 'product.created',
  ProductDeleted = 'product.deleted',
  ProductUpdated = 'product.updated',
  RadarEarlyFraudWarningCreated = 'radar.early_fraud_warning.created',
  RadarEarlyFraudWarningUpdated = 'radar.early_fraud_warning.updated',
  RecipientCreated = 'recipient.created',
  RecipientDeleted = 'recipient.deleted',
  RecipientUpdated = 'recipient.updated',
  ReportingReportRunFailed = 'reporting.report_run.failed',
  ReportingReportRunSucceeded = 'reporting.report_run.succeeded',
  ReportingReportTypeUpdated = 'reporting.report_type.updated',
  ReviewClosed = 'review.closed',
  ReviewOpened = 'review.opened',
  SetupIntentCanceled = 'setup_intent.canceled',
  SetupIntentCreated = 'setup_intent.created',
  SetupIntentSetup_failed = 'setup_intent.setup_failed',
  SetupIntentSucceeded = 'setup_intent.succeeded',
  SigmaScheduledQueryRunCreated = 'sigma.scheduled_query_run.created',
  SkuCreated = 'sku.created',
  SkuDeleted = 'sku.deleted',
  SkuUpdated = 'sku.updated',
  SourceCanceled = 'source.canceled',
  SourceChargeable = 'source.chargeable',
  SourceFailed = 'source.failed',
  SourceMandateNotification = 'source.mandate_notification',
  SourceRefundAttributesRequired = 'source.refund_attributes_required',
  SourceTransactionCreated = 'source.transaction.created',
  SourceTransactionUpdated = 'source.transaction.updated',
  subscriptionScheduleAborted = 'subscription_schedule.aborted',
  SubscriptionScheduleCanceled = 'subscription_schedule.canceled',
  SubscriptionScheduleCompleted = 'subscription_schedule.completed',
  SubscriptionScheduleCreated = 'subscription_schedule.created',
  SubscriptionScheduleExpiring = 'subscription_schedule.expiring',
  SubscriptionScheduleReleased = 'subscription_schedule.released',
  SubscriptionScheduleUpdated = 'subscription_schedule.updated',
  TaxRateCreated = 'tax_rate.created',
  TaxRateUpdated = 'tax_rate.updated',
  TopUpCanceled = 'topup.canceled',
  TopUpCreated = 'topup.created',
  TopUpFailed = 'topup.failed',
  TopUpReversed = 'topup.reversed',
  TopUpSucceeded = 'topup.succeeded',
  TransferCreated = 'transfer.created',
  TransferFailed = 'transfer.failed',
  TransferPaid = 'transfer.paid',
  TransferReversed = 'transfer.reversed',
  TransferUpdated = 'transfer.updated',
}

export type SupportedEvents = (
  StripeEventType.InvoicePaymentSucceeded
  | StripeEventType.CustomerSubscriptionUpdated
  | StripeEventType.CustomerCreated
  );
